{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,IAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,I,EA5CM,CACXO,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOH,EAAMI,cAAcC,SAAShB,MAAMiB,OAClDC,EAAOJ,OAAOH,EAAMI,cAAcC,SAASE,KAAKD,OAChDE,EAASL,OAAOH,EAAMI,cAAcC,SAASG,OAAOF,OAExD,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAGnCtB,EAFesB,EAESP,GACrBQ,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,OAExCyB,QAAQC,IAAI,uBAAqB3B,QAAiBC,MAAU,IAE7D2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOK,QACd,sBAAoB7B,QAAiBC,OAEvCyB,QAAQC,IAAI,sBAAoB3B,QAAiBC,MAAU,IAG/Da,GAASK,C,CAEXP,EAAMkB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.elements.delay.value);\n  let step = Number(event.currentTarget.elements.step.value);\n  let amount = Number(event.currentTarget.elements.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    let position = i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n  event.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) =>\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  );\n}\n\n// =============================================================================================\n// const refs = {\n//   form: document.querySelector('.form'),\n//   firstDelay: document.querySelector('[name = \"delay\"]'),\n//   delayStep: document.querySelector('[name = \"step\"]'),\n//   amount: document.querySelector('[name=\"amount\"]'),\n//   }\n\n// const delay = refs.firstDelay.value;\n// const step = refs.delayStep.value\n// const amount = refs.amount.value;\n\n// ====================================================\n\n//   for( let i = 0; i < amount; i += 1){\n//     const position = i+1;\n//      new Promise((resolve, reject) => setTimeout(()=> {\n\n//         const shouldResolve = Math.random() > 0.3;\n//         if (shouldResolve) {\n//             resolve(position)\n\n//       } else {\n//           reject(position)\n//         }\n\n//     }, myDelay + (step * i )))\n// }\n\n// ====================================================\n\n// for(let i =0; i<randomnumb) {\n//     setTimeout(()=> какая-то функция, i*300  )}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","form","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","elements","value","step","amount","i","then","$parcel$interopDefault","Notify","success","console","log","catch","failure","target","reset"],"version":3,"file":"03-promises.c53f265d.js.map"}